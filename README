
--------------------------------------------------------------------------------
::  Dependent JavaScript  ::  Ravi Chugh (rkc) (rchugh@cs.ucsd.edu)           ::
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Licenses

  1) LICENSE.DJS   : System !D + DJS
  2) LICENSE.LamJS : LambdaJS by Arjun Guha and Claudiu Saftoiu (in src/LamJS)
  3) LICENSE.Z3    : Z3 by Microsoft Research
  4) BNstats/      : BNstats.ml by Necula, McPeak, and Weimer

--------------------------------------------------------------------------------
Requirements

  1) Microsoft Z3 Theorem Prover (v2.16)

     Subsequent releases have different stdin/stdout behavior, and our
     type checker relies on the behavior of v2.16.

     This older version Linux binary should be available at:
     http://research.microsoft.com/projects/z3/z3-x64-2.16.tar.gz

     In case it is not, we've included a 64-bit z3 v2.16 binary in bin/

  2) ocamlbuild

--------------------------------------------------------------------------------
Building System D

  1) # make

  2) Either leave the z3 executable in this directory or move it somewhere
     that is accessible by PATH.

  3) export DJS_DIR=/path/to/djs/

     Set and export this variable to the root of the DJS directory.
     Use the absolute path, not the path relative from your home directory (~).
     You'll probably want to add this to your shell startup script.

--------------------------------------------------------------------------------
Examples

  The OOPSLA benchmarks (unannotated and annotated) are in:
    tests/apr-benchmarks/un/
    tests/apr-benchmarks/v1/

  To generate stats for line counts and type checking, cd to the src/ directory 
  and run:

    ../scripts/gen-benchmark-linecounts-3.py
    ../scripts/gen-benchmark-time.py

  Additional examples can be found in the tests/djs/ directory.

--------------------------------------------------------------------------------
Standard Prelude

  A standard prelude of built-in System !D primitive functions and native
  JavaScript functions are in:

    prims/basics.dref
    prims/objects.dref
    prims/prelude.js

  These three files are loaded along with every program.

--------------------------------------------------------------------------------
Running DJS

  # ./system-d -djs ../tests/djs/objects/simple00.js
  ...
  OK! 478 queries.

  Each DJS program is desugared to System !D and then converted into A-normal
  form, stored in out/anfExp.dref. To run System !D on this file, which
  already contains the standard prelude from the previous run, use the -raw
  flag so that the file is processed directly.

  # ./system-d -raw out/anfExp.dref
  ...
  OK! 478 queries.

  All of the queries dispatched to Z3 are saved in out/queries.lisp in
  (a precursor to) the SMT-LIB2 format, and can be run directly through z3.

  # z3 -smt2 out/queries.lisp | cat -n 

  The line numbers help match up queries with the query numbers (in comments)
  in queries.lisp.

